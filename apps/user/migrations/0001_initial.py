# Generated by Django 3.2.9 on 2021-11-14 07:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('master_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Additional_Profile_Items',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('additional_profile_item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('display_order', models.SmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('client_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('seconds_delivered_per_month', models.DecimalField(decimal_places=0, max_digits=15)),
                ('is_archived', models.SmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAccountModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_type', models.SmallIntegerField()),
                ('login_type', models.CharField(max_length=45)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('password', models.CharField(max_length=255, null=True)),
                ('remember_token', models.CharField(max_length=255, null=True)),
                ('facebook_id', models.CharField(max_length=255, null=True)),
                ('twitter_id', models.CharField(max_length=255, null=True)),
                ('apple_id', models.CharField(max_length=255, null=True)),
                ('last_name_kanji', models.CharField(max_length=255)),
                ('first_name_kanji', models.CharField(max_length=255)),
                ('last_name_kana', models.CharField(max_length=255)),
                ('first_name_kana', models.CharField(max_length=255)),
                ('nickname', models.CharField(max_length=255)),
                ('sex', models.SmallIntegerField()),
                ('is_sex_public', models.SmallIntegerField()),
                ('date_of_birth', models.DateField()),
                ('is_date_of_birth_public', models.SmallIntegerField()),
                ('phone', models.CharField(max_length=45, null=True)),
                ('zip_code', models.CharField(max_length=8, null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('subsequent_address', models.CharField(max_length=255, null=True)),
                ('biography', models.TextField(null=True)),
                ('points_balance', models.DecimalField(decimal_places=0, max_digits=15)),
                ('points_received', models.DecimalField(decimal_places=0, max_digits=15)),
                ('stamps_balance', models.DecimalField(decimal_places=0, max_digits=15)),
                ('econtext_cus_id', models.CharField(max_length=255, null=True)),
                ('delux_membership', models.CharField(max_length=255, null=True)),
                ('host_user_type', models.SmallIntegerField()),
                ('is_authenticated', models.SmallIntegerField()),
                ('is_archived', models.SmallIntegerField()),
                ('client_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='user.clients')),
                ('prefecture_id', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='master_data.prefectures')),
            ],
            options={
                'db_table': 'user_custom',
            },
        ),
        migrations.CreateModel(
            name='User_Stamps',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('user_stamps_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField()),
                ('deposit_reason', models.SmallIntegerField(null=True)),
                ('withdrawal_reason', models.SmallIntegerField(null=True)),
                ('stamps', models.DecimalField(decimal_places=0, max_digits=15)),
                ('transacted_at', models.DateTimeField()),
                ('stamps_balance', models.DecimalField(decimal_places=0, max_digits=15)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.useraccountmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User_Additional_Profile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('body', models.TextField()),
                ('additional_profile_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.additional_profile_items')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.useraccountmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stamp_Spending_Histories',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('spent_for', models.SmallIntegerField()),
                ('spent_at', models.DateTimeField()),
                ('user_stamp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user_stamps')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stamp_Receipt_Histories',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('live_stream_id', models.IntegerField(null=True)),
                ('stamp_code_id', models.IntegerField(null=True)),
                ('received_at', models.DateTimeField()),
                ('user_stamp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user_stamps')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stamp_Code',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('stamp_code_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('stamp_code', models.CharField(max_length=6)),
                ('stamps_granted', models.DecimalField(decimal_places=0, max_digits=15)),
                ('number_of_applicable_user', models.IntegerField(null=True)),
                ('number_of_applied_user', models.IntegerField()),
                ('expires_in', models.DateTimeField()),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.clients')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rankings',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('ranking_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.clients')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ranking_Summaries',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=0, max_digits=15)),
                ('target_date', models.DateField()),
                ('ranking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.rankings')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.useraccountmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Follows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('is_deleted', models.BooleanField(default=False, null=True, verbose_name='削除フラグ')),
                ('from_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related1', to='user.useraccountmodel')),
                ('to_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related2', to='user.useraccountmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
